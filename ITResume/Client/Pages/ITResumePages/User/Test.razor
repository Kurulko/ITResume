@page "/test"
@inherits _UserLayout

@if (models is null)
{
    <Spinner />
}
else
{

    @*
<CascadingValue Value="10" Name="PageSize">
    <TEST Service="ForeignLanguageService" models="models" GetModels="@(us => us.GetUserForeignLanguagesAsync())"
           OnActionBegin="ActionBeginHandler">
        <GridColumns>
            <GridColumn Field=@nameof(ForeignLanguage.Id) AllowAdding="false" />
            <GridColumn Field=@nameof(ForeignLanguage.HumanLanguageId) HeaderText="Name">
                <Template>
                    @(((ForeignLanguage)context)!.HumanLanguage?.Name ?? "idk")
                </Template>
                <EditTemplate>
                    <SfDropDownList TItem="HumanLanguage" TValue="long" DataSource="@humanLanguages"
                                    @bind-Value="@((context as ForeignLanguage)!.HumanLanguageId)">
                        <DropDownListFieldSettings Text="Name" Value="Id" />
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>

            <GridColumn Field=@nameof(ForeignLanguage.LanguageLevel)>
                <EditTemplate>
                    <SfDropDownList ID="LanguageLevel" TItem="string" TValue="LanguageLevel"
                                    @bind-Value="@((context as ForeignLanguage)!.LanguageLevel)"
                                    DataSource="@languageLevelEnumValues" />
                </EditTemplate>
            </GridColumn>
        </GridColumns>
    </TEST>
</CascadingValue>
*@

    <center>
        <ShowError Error="@error">
            <SfGrid @ref="modelGrid" DataSource="models" Toolbar="@(Enum.GetValues<Enums.EditMode>().Select(em => em.ToString()))" AllowPaging="true"
                AllowSorting="true" AllowFiltering="true" Width="50%" ClipMode="ClipMode.EllipsisWithTooltip">
                <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="200" />
                <GridSortSettings AllowUnsort="false" />
                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" />
                <GridEvents OnActionBegin="ActionBeginHandler" TValue="ForeignLanguage" />
                <GridPageSettings PageSize="50" />
                <GridColumns>
                    <GridColumn Field=@nameof(ForeignLanguage.Id) AllowAdding="false" />

                    <GridColumn Field=@nameof(ForeignLanguage.HumanLanguageId) HeaderText="Name">
                        <Template>
                            @(((ForeignLanguage)context)!.HumanLanguage?.Name ?? "idk")
                        </Template>
                        <EditTemplate>
                            <SfDropDownList TItem="HumanLanguage" TValue="long" DataSource="@humanLanguages"
                                        @bind-Value="@((context as ForeignLanguage)!.HumanLanguageId)">
                                <DropDownListFieldSettings Text="Name" Value="Id" />
                            </SfDropDownList>
                        </EditTemplate>
                    </GridColumn>

                    <GridColumn Field=@nameof(ForeignLanguage.LanguageLevel)>
                        <EditTemplate>
                            <SfDropDownList ID="LanguageLevel" TItem="string" TValue="LanguageLevel"
                                        @bind-Value="@((context as ForeignLanguage)!.LanguageLevel)"
                                        DataSource="@languageLevelEnumValues" />
                        </EditTemplate>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </ShowError>
    </center>
}


@*<CascadingValue Value="10" Name="PageSize">
    <SimpleEditITResumeDbModels Service="ForeignLanguageService" TModel="ForeignLanguage" GetModels="@(us => us.GetUserForeignLanguagesAsync())">
        <GridColumns>
            <GridColumn Field=@nameof(ForeignLanguage.Id) AllowAdding="false" />
            <GridColumn Field=@nameof(ForeignLanguage.HumanLanguageId) HeaderText="Name">
                <Template>
                    @(((ForeignLanguage)context)!.HumanLanguage?.Name ?? "no name")
                </Template>
                <EditTemplate>
                    <SfDropDownList TItem="HumanLanguage" TValue="long" DataSource="@humanLanguages"
                                    @bind-Value="@((context as ForeignLanguage)!.HumanLanguageId)">
                        <DropDownListFieldSettings Text="Name" Value="Id" />
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(ForeignLanguage.LanguageLevel)>
                <EditTemplate>
                    <SfDropDownList ID="LanguageLevel" TItem="string" TValue="LanguageLevel"
                                    @bind-Value="@((context as ForeignLanguage)!.LanguageLevel)"
                                    DataSource="@languageLevelEnumValues" />
                </EditTemplate>
            </GridColumn>
        </GridColumns>
    </SimpleEditITResumeDbModels>
</CascadingValue>
*@
@code {
    protected SfGrid<ForeignLanguage> modelGrid = null!;
    IEnumerable<ForeignLanguage> models;
    string[] languageLevelEnumValues = Enum.GetNames<LanguageLevel>();

    [Inject]
    public IForeignLanguageService ForeignLanguageService { get; set; } = null!;

    [Inject]
    public IHumanLanguageService HumanLanguageService { get; set; } = null!;

    IEnumerable<HumanLanguage>? humanLanguages;
    protected override async Task OnInitializedAsync()
    {
        models = await UserService.GetUserForeignLanguagesAsync();
        humanLanguages = await HumanLanguageService.GetAllModelsAsync();
    }
    //=> humanLanguages = await HumanLanguageService.GetAllModelsAsync();

    protected string? error;

    public async void ActionBeginHandler(ActionEventArgs<ForeignLanguage> Args)
    {
        try
        {
            ForeignLanguage model = Args.Data;
            Console.WriteLine(model.HumanLanguage?.Name ?? "idk");

            if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
            {
                if (Args.Action == Enums.EditMode.Add.ToString())
                {
                    await ForeignLanguageService.AddModelAsync(model);
                    await SetModels();
                    await modelGrid.Refresh();
                }
                else
                    await ForeignLanguageService.UpdateModelAsync(model);
            }
            else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
                await ForeignLanguageService.DeleteModelAsync(model.Id);
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    async Task SetModels()
        => models = await UserService.GetUserForeignLanguagesAsync();
}
