@page "/projects"
@inherits _UserLayout


@if (allLanguages is not null)
{
    <CascadingValue Value="20" Name="PageSize">
            <ComplexEditUserITResumeDbModels Service="ProjectService" TModel="Project" Context="project" GetModels="@(us => us.GetUserProjectsAsync())">
                <Columns>
                    <GridColumn Field=@nameof(Project.Name) />
                    <GridColumn Field=@nameof(Project.Github) />
                    <GridColumn Field=@nameof(Project.WorkExample) />
                    <GridColumn Field=@nameof(Project.Description)>
                        <EditTemplate>
                            <span>Description</span>
                            <SfTextBox @bind-Value="(context as Project)!.Description" Multiline=true />
                        </EditTemplate>
                    </GridColumn>
                    <GridColumn Field=@nameof(Project.StartDoing) />
                    <GridColumn Field=@nameof(Project.FinishDoing) />
                    <GridColumn Field=@nameof(Project.Technologies) HeaderText="Technologies" AllowGrouping="false" AllowSorting="false">
                        <Template>
                            @StringExtensions.ToString((context as Project)!.Technologies)
                        </Template>
                        <EditTemplate>
                            @{
                                Employee employee = context as Employee ?? new();
                            }
                            @*<MultiSelect AllItems="allTechnologies" Placeholder="Select a language" Title="Technologies" TextFieldStr="@nameof(Technology.Name)"
                        SaveAsync="@(technologies => Task.FromResult(employee.Technologies = technologies))" CurrentValues="employee.Technologies" />
                        *@
                        </EditTemplate>
                    </GridColumn>

                    <GridColumn Field=@nameof(Project.ProgrammingLanguages) HeaderText="Languages" AllowGrouping="false" AllowSorting="false">
                        <Template>
                            @StringExtensions.ToString((context as Project)!.ProgrammingLanguages)
                        </Template>
                        <EditTemplate>
                            @{
                                Project project = context as Project ?? new();
                            }
                            <SfMultiSelect TValue="IList<ProgrammingLanguage>" TItem="ProgrammingLanguage" Placeholder="Programming Languages" DataSource="@allLanguages"
                                       Mode="VisualMode.CheckBox" @bind-Value="project.ProgrammingLanguages">
                                <MultiSelectFieldSettings Text="Name" />
                            </SfMultiSelect>


                            @*
                        <MultiSelect AllItems="allLanguages" Placeholder="Select a language" Title="Programming Languages" TextFieldStr="@nameof(ProgrammingLanguage.Name)"
                        SaveAsync="@(languages => Task.FromResult(string.Empty))" CurrentValues="null" />
                        *@
                        </EditTemplate>
                    </GridColumn>
                </Columns>
                <RowDetails>
                    <td colspan="6">@project.Description</td>
                </RowDetails>
            </ComplexEditUserITResumeDbModels>
        </CascadingValue>
}


@code {
    IEnumerable<ProgrammingLanguage>? allLanguages;
    IEnumerable<Technology>? allTechnologies;

    [Inject]
    public IProjectService ProjectService { get; set; } = null!;

    [Inject]
    public IProgrammingLanguageService ProgrammingLanguageService { get; set; } = null!;

    [Inject]
    public ITechnologyService TechnologyService { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        allLanguages = await ProgrammingLanguageService.GetAllModelsAsync();
        allTechnologies = await TechnologyService.GetAllModelsAsync();
    }
}
