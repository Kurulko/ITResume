@inherits LayoutComponentBase

<BaseLayout Links="@links">@Body</BaseLayout>

@code {
    [CascadingParameter]
    Task<AuthenticationState> authStateTask { get; set; } = null!;

    IEnumerable<(string cssClass, string href, string name)> links = Enumerable.Empty<(string, string, string)>();

    IEnumerable<(string cssClass, string href, string name)> userLinks = new List<(string, string, string)>() {
                ("oi oi-home", "index", "Home"),
                ("oi oi-list-rich", "public-resume", "Profiles"),
                ("oi oi-list-rich", "achievements", "Achievements"),
                ("oi oi-list-rich", "educations", "Educations"),
                ("oi oi-list-rich", "experience", "Experience"),
                ("oi oi-list-rich", "foreign-languages", "Foreign Languages"),
                ("oi oi-list-rich", "projects", "Projects"),
                ("oi oi-list-rich", "contact", "Contact"),
            };

    IEnumerable<(string cssClass, string href, string name)> adminLinks = new List<(string, string, string)>() {
                ("oi oi-list-rich", "users", "Users"),
                ("oi oi-list-rich", "roles", "Roles"),
                ("oi oi-list-rich", "countries", "Countries"),
                ("oi oi-list-rich", "human-languages", "Human Languages"),
                ("oi oi-list-rich", "programming-languages", "Program Languages"),
                ("oi oi-list-rich", "technologies", "Technologies"),
                ("oi oi-list-rich", "companies", "Companies"),
            };

    IEnumerable<(string cssClass, string href, string name)> accountLinks = new List<(string, string, string)>() {
                ("oi oi-list-rich", "public-resume", "Profiles"),
                ("oi oi-person", "login", "Login"),
                ("oi oi-account-login","register", "Register")
            };

    protected override async Task OnParametersSetAsync()
    {
        var claims = (await authStateTask).User;
        bool isAuthenticated = claims?.Identity?.IsAuthenticated ?? false;
        if (isAuthenticated)
        {
            bool isAdmin = claims!.IsInRole(Roles.Admin);
            links = isAdmin ? userLinks.Union(adminLinks) : userLinks;
        }
        else
        {
            links = accountLinks;
        }
    }
}